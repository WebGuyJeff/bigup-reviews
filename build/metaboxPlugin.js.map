{"version":3,"file":"metaboxPlugin.js","mappings":"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","sources":["webpack://bigup-reviews/./src/components/MetaBox.js","webpack://bigup-reviews/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://bigup-reviews/./node_modules/prop-types/index.js","webpack://bigup-reviews/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://bigup-reviews/external window \"React\"","webpack://bigup-reviews/external window [\"wp\",\"components\"]","webpack://bigup-reviews/external window [\"wp\",\"compose\"]","webpack://bigup-reviews/external window [\"wp\",\"data\"]","webpack://bigup-reviews/external window [\"wp\",\"editPost\"]","webpack://bigup-reviews/external window [\"wp\",\"i18n\"]","webpack://bigup-reviews/external window [\"wp\",\"plugins\"]","webpack://bigup-reviews/webpack/bootstrap","webpack://bigup-reviews/webpack/runtime/compat get default export","webpack://bigup-reviews/webpack/runtime/define property getters","webpack://bigup-reviews/webpack/runtime/hasOwnProperty shorthand","webpack://bigup-reviews/./src/metaboxPlugin.js"],"sourcesContent":["import { __ } from '@wordpress/i18n'\nimport PropTypes from 'prop-types'\nimport { compose } from '@wordpress/compose'\nimport { withSelect, withDispatch } from '@wordpress/data'\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post'\nimport { PanelRow, TextControl } from '@wordpress/components'\nimport json from '../../data/review-definition'\nconst { label, prefix, key, customFields } = json\n\n/**\n * Add a metabox for all post custom fields.\n * \n * @see https://kinsta.com/blog/wordpress-add-meta-box-to-post/ \n */\nconst MetaBox = ( { postType, metaFields, setMetaFields } ) => {\n\n\tif ( postType !== key ) return null\n\n\t// Dynamically build an object array of meta fields for output in the panel.\n\tlet fields = []\n\tcustomFields.forEach( customField => {\n\t\tconst metaKey = prefix + key + customField.suffix\n\t\tfields.push( {\n\t\t\t'metaKey': metaKey,\n\t\t\t'value': ( metaFields[ metaKey ] ) ? metaFields[ metaKey ] : '',\n\t\t\t'updateValue': ( newValue ) => setMetaFields( { [ metaKey ]: newValue } ),\n\t\t\t'label': customField.label,\n\t\t\t'description': customField.description,\n\t\t\t'type': customField.input_type,\n\t\t\t'placeholder': customField.placeholder,\n\t\t\t'required': customField.required,\n\t\t\t'maxlength': customField.length_limit,\n\t\t} )\n\t} )\n\n\treturn(\n\t\t<>\n\t\t\t{ fields.map( ( field ) => (\n\t\t\t\t<PluginDocumentSettingPanel\n\t\t\t\t\tkey={ field.metaKey }\n\t\t\t\t\tname={ field.metaKey + '-panel' }\n\t\t\t\t\ttitle={ field.label } \n\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t>\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ field.description }\n\t\t\t\t\t\t\t\tvalue={ field.value }\n\t\t\t\t\t\t\t\tonChange={ field.updateValue }\n\t\t\t\t\t\t\t\ttype={ field.type }\n\t\t\t\t\t\t\t\tplaceholder={ field.placeholder }\n\t\t\t\t\t\t\t\trequired={ field.required }\n\t\t\t\t\t\t\t\tmaxLength={ field.maxlength }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t</PluginDocumentSettingPanel>\n\t\t\t) ) }\n\t\t</>\n\t)\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\treturn {\n\t\tmetaFields: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\tpostType: select( 'core/editor' ).getCurrentPostType()\n\t}\n} )\n\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\treturn {\n\t\tsetMetaFields ( newValue ) {\n\t\t\tdispatch( 'core/editor' ).editPost( { meta: newValue } )\n\t\t}\n\t}\n} )\n\nexport default compose( [\n\tapplyWithSelect,\n\tapplyWithDispatch\n] )( MetaBox )\n\nMetaBox.propTypes = {\n\tpostType: PropTypes.string,\n\tmetaFields: PropTypes.object,\n\tsetMetaFields: PropTypes.func,\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\n * Register a plugin to add items to the Gutenberg Toolbar.\n * \n * This main index file is enqueued by the PHP Init class.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/slotfills/plugin-sidebar/\n */\nimport { registerPlugin } from '@wordpress/plugins'\nimport MetaBox from './components/MetaBox'\n\nregisterPlugin( 'bigup-cpt-review-metabox', {\n\trender: MetaBox\n} )\n"],"names":["label","prefix","key","customFields","json","MetaBox","postType","metaFields","setMetaFields","fields","forEach","customField","metaKey","suffix","push","newValue","description","input_type","placeholder","required","length_limit","createElement","Fragment","map","field","PluginDocumentSettingPanel","name","title","initialOpen","PanelRow","TextControl","value","onChange","updateValue","type","maxLength","maxlength","applyWithSelect","withSelect","select","getEditedPostAttribute","getCurrentPostType","applyWithDispatch","withDispatch","dispatch","editPost","meta","compose","propTypes","PropTypes","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerPlugin","render"],"sourceRoot":""}